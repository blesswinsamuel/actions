name: "Docker build, push and notify"
description: "Docker build, push and notify"

inputs:
  checkout:
    description: "Checkout"
    required: true
    default: "true"
  docker-registry:
    description: "Docker Registry"
    required: true
    default: ghcr.io
  docker-username:
    description: "Docker Username"
    required: true
    default: "${{ github.actor }}"
  docker-password:
    description: "Docker Password"
    required: true
    default: "${{ github.token }}"
  docker-image-name:
    description: "Docker Image Name"
    required: true
    default: "${{ github.repository }}"
  telegram-bot-token:
    description: "Telegram Bot Token"
    required: false
  telegram-chat-id:
    description: "Telegram Chat ID"
    required: false
  slack-webhook:
    description: "Slack Webhook URL"
    required: false
  docker-build-platforms:
    description: "Docker build platforms"
    required: true
    default: "linux/amd64"
  docker-build-args:
    description: "Docker build args"
    required: false
  docker-provenance:
    description: "Docker provenance"
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker-registry }}
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-password }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.docker-registry }}/${{ inputs.docker-image-name }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=edge

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ inputs.docker-build-platforms }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.docker-build-args }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: ${{ inputs.docker-provenance }}

    - uses: blesswinsamuel/github-actions/notify-telegram@main
      if: ${{ inputs.telegram-bot-token && inputs.telegram-chat-id }}
      with:
        telegram-bot-token: ${{ inputs.telegram-bot-token }}
        telegram-chat-id: ${{ inputs.telegram-chat-id }}

    - uses: blesswinsamuel/github-actions/notify-slack@main
      if: ${{ inputs.slack-webhook }}
      with:
        slack-webhook: ${{ inputs.slack-webhook }}
